#!/bin/sh

[ -n "$*" ] && h="$*"

set noglog; #eval `resize`

PKEY="$HOME/.ssh/id_rsa"
KEY="$HOME/.ssh/id_rsa.pub"
optdir=$HOME/.ssh-wrapper

progname=`basename $0`
itermSessionID=${TERM_SESSION_ID#*:}
mkdir -p $optdir

function ssh_copy_id_func {

  if [ ! -f $KEY ];then
      echo "private key not found at $KEY"
      echo "* please create it with \"ssh-keygen -t rsa\" *"
      return
  fi

  ssh-add -l | grep -q "The agent has no identities."
  [ $? == 0 ] && ssh-add $PKEY

  r=`ssh $* -x -K -o PasswordAuthentication=no -o NumberOfPasswordPrompts=0 true 2>&1`
  [ $? == 0 ] && return

  echo $r | grep -q "Could not resolve hostname" && exit 1

  read -p "Do you want to add $KEY to $*:~/.ssh/authorized_keys? [y/N] " risp
  [ "x$risp" != "xy" ] && [ "x$risp" != "xY" ] && return

  ssh -q -x $* "umask 0077; mkdir -p ~/.ssh ; echo "`cat $KEY`" >> ~/.ssh/authorized_keys"
  [ $? == 0 ] || return
  echo "PublicKey added!"
}

if [ ! -f $optdir/session.$itermSessionID ]; then

  histfile=$optdir/${progname}_history

  history -r $histfile

  while [ -z "$h" ]; do
    read -e -p "Host: " h
  done

  if [ "`tail -1 $histfile`" != "$h" ]; then
    echo $h >> $histfile
  fi

  if [ "$progname" == "ssh-root" ]; then
    sshopt="-l root"
  fi
  
  ssh_copy_id_func $sshopt $h
  
  if [ $? == 0 ]; then
  
    if [ -e "$optdir/$h.def-fwd-ssh-agent" ]; then
  
            sshopt="$sshopt -A"
  
    else
  
      read -p "Do you want to forward ssh-agent to $h? [y/a/N] " risp
      if [ "x$risp" == "xa" ] || [ "x$risp" == "xA" ]; then
        sshopt="$sshopt -A"
        touch "$optdir/$h.def-fwd-ssh-agent"
      fi
      if [ "x$risp" == "xy" ] || [ "x$risp" == "xY" ]; then
        sshopt="$sshopt -A"
      fi
  
    fi
  
  fi
  
  SSHCMD="ssh $sshopt $h"

else

  SSHCMD=`cat $optdir/session.$itermSessionID`
  touch $optdir/session.restore.time

fi

a='r'
while [ x$a != xq ] && [ x$a != xQ ]; do

  echo "$SSHCMD" > $optdir/session.$itermSessionID
  $SSHCMD
  echo
  read -n 1 -p "Press any key to reconnect or 'q' to quit. " a
  echo

done

rm -f $optdir/session.$itermSessionID
exit 0

